{"version":3,"sources":["styles.module.css","onPage/Tasks/Tasks.module.css","onPage/Input/Input.module.css","onPage/Attention/Attention.module.css","components/UI/Filter/Filter.module.css","API/ContentServies.js","components/UI/Filter/Select.jsx","onPage/Sorting/Sorting.jsx","onPage/Tasks/Tasks.jsx","onPage/Attention/Attention.jsx","onPage/Input/Input.jsx","App.js","CustomHooks/useSorting.js","CustomHooks/useFetching.js","index.js"],"names":["module","exports","ContentServies","axios","get","response","Select","defaultName","options","filterSelector","setfilterSelector","className","classes","select","value","onChange","event","target","disabled","map","option","name","Sorting","BlockOfTask","removeBlock","changeStatus","changeValue","Task","id","type","checked","active","Taskinput","text","remBut","onClick","Attention","visAttention","Attention_vis","join","Attention_hide","Input","setNewTasks","input","Active_red_input","Usual_input","placeholder","App","somethingContent","filterSelec","useState","contents","setContent","newTask","setvisAttention","callback","ind","error","setError","fetch","message","useFetching","GetQuery","res","data","fetching","tasks","filter","el","useEffect","removeTask","taskId","position","number","Arr_value","cur_value","Error","AddPlusSort","AddBut","task","taskObj","Date","now","trim","setTimeout","addTask","length","TransitionGroup","content","CSSTransition","timeout","classNames","Tasks","rootElement","document","getElementById","createRoot","render"],"mappings":"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","file":"static/js/main.59f52440.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"styles_App__B_Ljb\",\"Error\":\"styles_Error__2QW0n\",\"AddPlusSort\":\"styles_AddPlusSort__17qr9\",\"AddBut\":\"styles_AddBut__3DoJl\",\"Task\":\"styles_Task__Gr3X6\",\"Task-enter\":\"styles_Task-enter__1y3Ed\",\"Task-enter-active\":\"styles_Task-enter-active__1YJ1G\",\"Task-exit\":\"styles_Task-exit__3tRMO\",\"Task-exit-active\":\"styles_Task-exit-active__fthLS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Task\":\"Tasks_Task__2RIjo\",\"Taskinput\":\"Tasks_Taskinput__32hVe\",\"remBut\":\"Tasks_remBut__2vwPI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Input_input__3TD34\",\"Usual_input\":\"Input_Usual_input__20mc5\",\"Active_red_input\":\"Input_Active_red_input__dzyN5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Attention_hide\":\"Attention_Attention_hide__3fJTI\",\"Attention_vis\":\"Attention_Attention_vis__1DH4H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"Filter_select__3v2Dx\"};","import axios from \"axios\";\r\n\r\nexport class ContentServies {\r\n  // ранее здесь был локальный url .За счёт этого фронт куртился на локальному порту через json-server\r\n\r\n  static async GetQuery() {\r\n    const response = await axios.get(\r\n      \"https://my-json-server.typicode.com/falk20/demo/todos\"\r\n    );\r\n\r\n    return response;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport classes from \"./Filter.module.css\";\r\nconst Select = ({\r\n  defaultName,\r\n  options,\r\n  filterSelector,\r\n  setfilterSelector\r\n}) => {\r\n  return (\r\n    <select\r\n      className={classes.select}\r\n      value={filterSelector}\r\n      onChange={(event) => setfilterSelector(event.target.value)}\r\n    >\r\n      <option disabled value=\"all\">\r\n        {defaultName}\r\n      </option>\r\n      {options.map((option) => (\r\n        <option key={option.value} value={option.value}>\r\n          {option.name}\r\n        </option>\r\n      ))}\r\n    </select>\r\n  );\r\n};\r\n\r\nexport default Select;\r\n","import React from \"react\";\r\nimport Select from \"../../components/UI/Filter/Select\";\r\n\r\nconst Sorting = ({ filterSelector, setfilterSelector }) => {\r\n  return (\r\n    <Select\r\n      filterSelector={filterSelector}\r\n      setfilterSelector={setfilterSelector}\r\n      defaultName=\"Сортировка по:\"\r\n      options={[\r\n        { name: \"Все\", value: \"all\" },\r\n        { name: \"Выполненные\", value: \"true\" },\r\n        { name: \"Невыполненные\", value: \"\" }\r\n      ]}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Sorting;\r\n","import React from \"react\";\r\nimport classes from \"./Tasks.module.css\";\r\n\r\nconst BlockOfTask = ({ value, removeBlock, changeStatus, changeValue }) => {\r\n  return (\r\n    <div className={classes.Task}>\r\n\r\n      <label id='status' >\r\n      <input\r\n        type=\"checkbox\"\r\n        id='status'\r\n        checked={value.active}\r\n        onChange={() => changeStatus(value)}\r\n      />\r\n      </label>\r\n\r\n      <label  id='value' className={classes.Taskinput}>\r\n      <input\r\n        value={value.text}\r\n        id='value'\r\n        className={classes.Taskinput}\r\n        onChange={(event) => changeValue(value,event.target.value)}\r\n      />\r\n   </label>\r\n\r\n      <button className={classes.remBut} onClick={() => removeBlock(value)}>\r\n        Удалить задачу\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BlockOfTask;\r\n","import React from \"react\";\r\nimport classes from \"./Attention.module.css\";\r\n\r\nconst Attention = ({ visAttention }) => {\r\n  return (\r\n    <div\r\n      className={\r\n        visAttention\r\n          ? [classes.Attention_vis].join(\"\")\r\n          : [classes.Attention_hide].join(\"\")\r\n      }\r\n    >\r\n      <small>Поле с заданием не заполнено!</small>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Attention;\r\n","import React from \"react\";\r\nimport Attention from \"../Attention/Attention\";\r\nimport classes from \"./Input.module.css\";\r\n\r\nconst Input = ({ setNewTasks, visAttention }) => {\r\n  return (\r\n    <label id='newTask'  className={[classes.input].join(\"\")}>\r\n      \r\n      <input\r\n      id='newTask'\r\n        className={\r\n          visAttention\r\n            ? [classes.Active_red_input].join(\"\")\r\n            : [classes.Usual_input].join(\"\")\r\n        }\r\n        type=\"text\"\r\n        placeholder=\"Введите задачу..\"\r\n        onChange={(event) => setNewTasks(event.target.value)}\r\n      />\r\n      {/* функциональный компонент Attention? отвечающий за предупреждение о пустой строке в инпуте  */}\r\n      <Attention visAttention={visAttention} />\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import classes from \"./styles.module.css\";\nimport \"./AnimationTask/Task.css\";\nimport React, { useState, useEffect } from \"react\";\nimport { useFetching } from \"./CustomHooks/useFetching\";\nimport { useSorting } from \"./CustomHooks/useSorting\";\nimport { ContentServies } from \"./API/ContentServies\";\nimport Sorting from \"./onPage/Sorting/Sorting\";\nimport Tasks from \"./onPage/Tasks/Tasks\";\nimport Input from \"./onPage/Input/Input\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\n\nexport default function App() {\n  // хук useState для отслеживания изменений всех задач\n  const [contents, setContent] = useState([]);\n  // хук useState для отслеживания того , что написали в инпуте\n  const [newTask, setNewTasks] = useState(\"\");\n  // хук useState для отслеживания того ,  по какому именно статусу реализуется фильтрация задач\n  const [filterSelector, setfilterSelector] = useState(\"all\");\n  // хук useState для отслеживания того , нужно или не нужно отобржать предупреждение о том , что поле инпут пустое или нет\n  const [visAttention, setvisAttention] = useState(false);\n\n  // В самом начале осуществляется запрос для получения всех задач\n  // Поскольку в процессе получения данных может возникнуть ошибка ,был создан отдельным кастомный хук\n  // для перехвата ошибки useFetching или для получения данных\n  const [fetching, error] = useFetching(async () => {\n    const res = await ContentServies.GetQuery();\n\n    setContent(res.data);\n  });\n\n  // фильтрация всего массива по конкретному статусу(выполнен, невыполнен или показать все все задачи)\n  // Был создан отдельный кастомный хук,поскольку  может быть придуманот в дальнейшем много условий по которым можно отсортировывать или фильровать задачи\n  const tasks = useSorting(contents, filterSelector);\n\n  // хук useEffect использовуется с пустым массивом для того, чтобы один раз отрисовать все задачи\n  useEffect(() => {\n    fetching();\n  }, []);\n\n  // функиця , связанная с добавлением конкретной задачи со своим\n  // уникальным id и с невыполненным статусом.\n  // В том случаем ,если строка пустая- появляется уведомление\n  const addTask = (task) => {\n    const taskObj = {\n      id: Date.now(),\n      text: task,\n      active: false\n    };\n\n    taskObj.text.trim()\n      ? setContent([...contents, taskObj])\n      : (setvisAttention(true),\n        setTimeout(() => {\n          setvisAttention(false);\n        }, 3000));\n  };\n\n  // функиця , связанная с удалением конкретной задачи по id\n  const removeTask = (taskId) => {\n    setContent(contents.filter((position) => position.id !== taskId.id));\n  };\n\n  // функиця , связанная с изменением статуса задачи по id\n  const changeStatus = (number) => {\n    setContent(\n      contents.map((el) => {\n        if (el.id === number.id) {\n          el.active = !el.active;\n          return el;\n        } else return el;\n      })\n    );\n  };\n\n  // функиця , связанная с изменением конкретной задачи\n  const changeValue = (Arr_value, cur_value) => {\n    setContent(\n      contents.map((el) => {\n        if (el.id === Arr_value.id) {\n          el.text = cur_value;\n          return el;\n        } else return el;\n      })\n    );\n  };\n\n  // для лучшей читаемости кода были созданы отдельно функциональные компоненты в папке OnPage\n  // которые описывают каждый эдемент на странице\n  return (\n    <div className={classes.App}>\n      {/* error-переменная , которая ретёрниться в результате вызова useFetching\n      .Если ошибки нет, то на странице будут отображаться текущие задачи.\n      Если ошибка есть, то показываться ошибка */}\n      {error ? (\n        <h1 className={classes.Error}>Произошла ошибка ${error}`</h1>\n      ) : (\n        <div>\n          {/* функциональный компонент ,отвечающий за инпут на странице */}\n          <Input setNewTasks={setNewTasks} visAttention={visAttention} />\n          <h1>Поставь себе на сегодня задачи!</h1>\n          {/* Кнопка , отвечающая за добавление новой задачи */}\n          <div className={classes.AddPlusSort}>\n            <button className={classes.AddBut} onClick={() => addTask(newTask)}>\n              Добавить задачу\n            </button>\n            {/* Sorting - фугкциональный компонент ,отвечающий за сортировку */}\n            <Sorting\n              filterSelector={filterSelector}\n              setfilterSelector={setfilterSelector}\n            />\n          </div>\n\n          {/* tasks - результирующий отфильтрованный массив с задачами.\n          Tasks- является функциональным компонентом , отвечающим за отображение задачи на странице */}\n\n          {tasks.length !== 0 ? (\n            // для анимации списка задач была выбрана библиотека   TransitionGroup\n            // Вся логика по работе с анимацей имеет в папке AnimationTask\n            <TransitionGroup>\n              {tasks.map((content) => (\n                <CSSTransition\n                  key={content.id}\n                  timeout={500}\n                  classNames=\"Tasks\"\n                >\n                  <Tasks\n                    value={content}\n                    removeBlock={removeTask}\n                    changeStatus={changeStatus}\n                    changeValue={changeValue}\n                  />\n                </CSSTransition>\n              ))}\n            </TransitionGroup>\n          ) : (\n            <h1>У Вас нет текущих задач</h1>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n","export function useSorting(somethingContent, filterSelec) {\r\n  if (filterSelec === \"all\") return somethingContent;\r\n  else {\r\n    return somethingContent.filter((el) => el.active == !!filterSelec);\r\n  }\r\n}\r\n","import { useState } from \"react\";\r\n\r\nexport const useFetching = (callback, ind) => {\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const fetch = async () => {\r\n    try {\r\n      await callback(ind);\r\n    } catch (e) {\r\n      setError(e.message);\r\n    } finally {\r\n    }\r\n  };\r\n\r\n  return [fetch, error];\r\n};\r\n","import { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(<App />);\n"],"sourceRoot":""}